enum FileType {
  IMAGE
  PDF
  VIDEO
}

enum FileStatus {
  ACTIVE
  ARCHIVED
  DELETED
}

model File {
  id            Int        @id @default(autoincrement())
  fileName      String
  description   String?    @db.Text
  fileSize      Int
  filePublicId  String // for cloudinary fields
  fileUrl       String // for cloudinary fields
  fileSecureUrl String // for cloudinary fields
  uploadedBy    Int
  fileType      FileType   @default(IMAGE)
  status        FileStatus @default(ACTIVE)

  // timestamps
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  // references 
  uploader            User                @relation(fields: [uploadedBy], references: [id])
  categoryFiles       CategoryFile[]
  productFiles        ProductFile[]
  variantFiles        VariantFile[]
  logoForSellers      Seller[]            @relation("LogoForSellers")
  bannerForSellers    Seller[]            @relation("BannerForSellers")
  brands              Brand[]
  avatar              User?               @relation("AvatarFile")
  productReviewImages ProductReviewFile[]

  @@map("Files")
}

model CategoryFile {
  id         Int @id @default(autoincrement())
  categoryId Int
  fileId     Int

  // references 
  category Category @relation(fields: [categoryId], references: [id])
  file     File     @relation(fields: [fileId], references: [id])

  // timestamps
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@map("CategoryFiles")
}

model ProductFile {
  id        Int @id @default(autoincrement())
  productId Int
  fileId    Int

  // references 
  product Product @relation(fields: [productId], references: [id])
  file    File    @relation(fields: [fileId], references: [id])

  // timestamps
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@map("ProductFiles")
}

model VariantFile {
  id        Int @id @default(autoincrement())
  variantId Int
  fileId    Int

  // references
  file    File           @relation(fields: [fileId], references: [id])
  variant ProductVariant @relation(fields: [variantId], references: [id])

  // timestamps
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@map("VariantFiles")
}
