model Session {
  id           Int      @id @default(autoincrement())
  userId       Int
  sessionToken String   @unique
  expiresAt    DateTime

  // timestamps
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  // references 
  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@index([userId, sessionToken, expiresAt])
  @@map("Sessions")
}

model RefreshToken {
  id        Int      @id @default(autoincrement())
  userId    Int
  token     String   @unique
  expiresAt DateTime

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@index([userId, token, expiresAt])
  @@map("RefreshTokens")
}

model OTPRequest {
  id        Int        @id @default(autoincrement())
  userEmail String
  code      String     @db.VarChar(6)
  purpose   OTPPurpose
  expiresAt DateTime
  verified  Boolean    @default(false)

  // timestamps
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  // references
  User User? @relation(fields: [userEmail], references: [email])

  @@index([userEmail, code, expiresAt])
  @@map("OTPRequests")
}

enum OTPPurpose {
  LOGIN
  RESET_PASSWORD
  // add more purpose if needed
}
