model User {
  id              Int           @id @default(autoincrement())
  role            UserRole      @default(BUYER)
  fullName        String
  email           String        @unique
  password        UserPassword?
  phonePrefixCode String?       @default("880") @db.VarChar(10)
  phoneNumber     String?       @unique @db.VarChar(20)
  emailVerified   Boolean       @default(false)
  phoneVerified   Boolean       @default(false)
  avatarUrl       String?       @db.VarChar(255)
  avatarId        Int?          @unique
  status          UserStatus    @default(INACTIVE)

  // timestamps
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  // references
  avatar          File?             @relation("AvatarFile", references: [id], fields: [avatarId])
  oAuthAccounts   OAuthAccount[]
  sessions        Session[]
  addresses       Address[]
  files           File[]
  sellerProfile   Seller?
  cart            Cart?
  wishlist        Wishlist?
  refreshTokens   RefreshToken[]
  OTPRequest      OTPRequest[]
  shippingAddress ShippingAddress[]

  @@index([email, phoneNumber, fullName])
  @@map("Users")
}

model UserPassword {
  id           Int    @id @default(autoincrement())
  hashPassword String @db.VarChar(255)
  userId       Int    @unique

  // timestamps
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  // references
  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@map("UserPasswords")
}

enum UserRole {
  BUYER
  SELLER
  ADMIN
}

enum UserStatus {
  ACTIVE
  INACTIVE
  RESTRICTED
}
