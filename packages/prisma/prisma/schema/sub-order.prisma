// TODO: Later on add shipment model to accommodate shipping carrier and information
model SubOrder {
  id               Int            @id @default(autoincrement())
  uniqueId         String         @unique
  orderId          Int
  sellerId         Int
  totalAmount      Decimal // Sub total of order
  discountAmount   Decimal // Discount applied to the order
  netAmount        Decimal // Final amount after all adjustments
  orderNote        String?
  status           SubOrderStatus @default(PROCESSING)
  shippingOptionId Int

  // timestamps
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  // Status timestamps
  orderPlacedAt    DateTime
  orderPackedAt    DateTime?
  orderShippedAt   DateTime?
  orderDeliveredAt DateTime?
  orderCanceledAt  DateTime?

  // references
  seller         Seller         @relation(fields: [sellerId], references: [id])
  order          Order          @relation(fields: [orderId], references: [id])
  subOrderItems  SubOrderItem[]
  shippingOption ShippingOption @relation(fields: [shippingOptionId], references: [id])

  @@index([uniqueId, id, orderId, status])
  @@map("SubOrders")
}

model SubOrderItem {
  id               Int     @id @default(autoincrement())
  subOrderId       Int
  productId        Int
  productVariantId Int?
  productName      String
  attributes       Json // Store product attributes statically  
  price            Decimal
  quantity         Int
  totalAmount      Decimal // Total amount for this order item

  // timestamps
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  // references
  subOrder SubOrder @relation(fields: [subOrderId], references: [id])

  @@index([subOrderId, productId, productVariantId])
  @@map("SubOrderItems")
}

enum SubOrderStatus {
  CONFIRMED
  PROCESSING
  PACKED
  SHIPPED
  IN_TRANSIT
  OUT_FOR_DELIVERY
  DELIVERED
  DELIVERY_FAILED
  RETURN_INITIATED
  RETURN_RECEIVED
  REPLACEMENT_INITIATED
  REFUND_INITIATED
  REFUND_COMPLETED
  CANCELED
}
